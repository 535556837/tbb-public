<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="false">
		
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="1000"/><!-- 最大闲置 -->
        <property name="maxWaitMillis" value="10000" />
        <property name="minIdle" value="10"/><!-- 最小闲置 -->
        <property name="testOnBorrow" value="true"/><!-- 可以获取 -->
<!--        <property name="testOnReturn" value="true"/>-->
    </bean>
	<!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<!-- 端口，默认6379 -->
		 <constructor-arg index="2" value="6380"  name="port" type="int"/>
	    <!--<constructor-arg index="2" value="8091"  name="port" type="int"/>-->
	    <constructor-arg index="3" value="5000"  name="timeout" type="int"/>
	  <!-- 	<constructor-arg index="1" value="47.106.14.97" name="host" type="java.lang.String"/> -->
	  	<constructor-arg index="1" value="127.0.0.1" name="host" type="java.lang.String"/>
	    <!-- 如果你需要配置密码，请打开这里。
	        <constructor-arg index="4" value="你的密码" name="password" type="java.lang.String"/>
	    -->
	</bean>
  <!-- <bean id="methodCacheInterceptor" class="com.zyt.cxfq.service.redis.MethodCacheInterceptor"></bean>
	 <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" >  
   <property name="advice" ref="methodCacheInterceptor" />
   <property name="patterns" > 
     <list> 
      确定正则表达式列表 
       <value>com\.zyt\.cxfq\.service\.impl\.*.*</value > 
     </list> 
   </property> 
</bean >  -->

<bean id="systemMethodInterceptor" class="com.zyt.cxfq.service.redis.MethodCacheInterceptor" >  
</bean>  
<aop:config>   
<!--切入点-->   
 <aop:pointcut id="methodPoint" expression="execution(* com.zyt.cxfq.service.impl.*.*(..)) "/><!--在该切入点使用自定义拦截器-->   
<aop:advisor pointcut-ref="methodPoint" advice-ref="systemMethodInterceptor"/>  
</aop:config>
	 
</beans>