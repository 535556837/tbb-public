<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" 
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"> 
<!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties        
    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.
    注意，两个属性只能选址一个;

    另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用
<properties resource="" url="" />
-->
<generatorConfiguration> 

<!-- 
    context:生成一组对象的环境 
    id:必选，上下文id，用于在生成错误时提示
    defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
    targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
    introspectedColumnImpl：类全限定名，用于扩展MBG
-->
<context id="ORATables" targetRuntime="MyBatis3">
    <!-- Pagination -->
    <plugin type="com.zyt.cxfq.plugin.MySQLPaginationPlugin" ></plugin>
    <plugin type="org.mybatis.generator.plugins.SerializablePlugin" ></plugin>

	<!-- 控制注释 -->
	<commentGenerator type="com.zyt.cxfq.util.MyCommentGenerator">
	</commentGenerator>
	
	<!-- 必须要有的，使用这个配置链接数据库
        @TODO:是否可以扩展
     -->
	<!-- <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.1.210:3306/cxfq?useUnicode=true&amp;characterEncoding=utf8" userId="root" password="root">  -->
	 <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://127.0.0.1:3307/tbb?useUnicode=true&amp;characterEncoding=utf8" userId="root" password="!yoyo4455667788">  
	</jdbcConnection> 
	<!-- java类型处理器 
        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； 
    -->
	<javaTypeResolver> 
		<!-- 
            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
            false：默认,
                scale>0;length>18：使用BigDecimal;
                scale=0;length[10,18]：使用Long；
                scale=0;length[5,9]：使用Integer；
                scale=0;length<5：使用Short；
         -->
		<property name="forceBigDecimals" value="false"/> 
	</javaTypeResolver> 
	<!-- java模型创建器，是必须要的元素
        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
     -->
	<javaModelGenerator targetPackage="com.zyt.cxfq.model" targetProject="src"> 
		<!--  for MyBatis3/MyBatis3Simple
           	自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；
         -->
        <property name="constructorBased" value="false"/>
        <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
		<property name="enableSubPackages" value="true"/> 
		<!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
		<property name="trimStrings" value="true"/> 
	</javaModelGenerator> 
	 <!-- 生成SQL map的XML文件生成器，
        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
        targetPackage/targetProject:同javaModelGenerator
     -->
    <sqlMapGenerator targetPackage="com.zyt.cxfq.mapper" targetProject="src"> 
    	<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
		<property name="enableSubPackages" value="true"/> 
	</sqlMapGenerator>
	<!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口 
        targetPackage/targetProject:同javaModelGenerator
        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
    -->
    <javaClientGenerator type="XMLMAPPER" targetPackage="com.zyt.cxfq.mapper" targetProject="src"> 
    	<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
		<property name="enableSubPackages" value="true"/> 
	</javaClientGenerator>
	<table tableName="d_quote_dtl">
		<generatedKey column="quote_del_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table> 
	 
	
	<!--
	 <table tableName="d_quote">
		<generatedKey column="quote_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
	<table tableName="d_car">
		<generatedKey column="car_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
		<table tableName="d_emp_client">
		<generatedKey column="emp_client_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
	<table tableName="d_quote_record">
		<generatedKey column="quote_record_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
 <table tableName="d_car_owner">
		<generatedKey column="car_owners_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
	 <table tableName="d_client">
		<generatedKey column="client_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table>
	 
	-->
	
	<!-- <table tableName="d_employee">
		<generatedKey column="u_id" sqlStatement="select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual" />
	</table> -->
	
	
	
	
	<!--下面是oracle的配置-->
 		<!-- Pagination -->
 		<!-- 
<plugin type="com.lyxx.oraclepage.OraclePaginationPlugin"></plugin>
<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
<commentGenerator> 
	<property name="suppressAllComments" value="true" />      
</commentGenerator>  
<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@192.168.1.210:1521:orcl" userId="cdpc" password="tiger"> 
   </jdbcConnection> 
<javaTypeResolver> 
<property name="forceBigDecimals" value="false"/> 
</javaTypeResolver> 
<javaModelGenerator targetPackage="com.lyxx.sczx.model" targetProject="src\main\java"> 
<property name="enableSubPackages" value="false"/> 
<property name="trimStrings" value="true"/> 
</javaModelGenerator> 
<sqlMapGenerator targetPackage="com.lyxx.sczx.dao" targetProject="src\main\java"> 
<property name="enableSubPackages" value="false"/> 
</sqlMapGenerator> 
<javaClientGenerator type="XMLMAPPER" targetPackage="com.lyxx.sczx.dao" targetProject="src\main\java"> 
<property name="enableSubPackages" value="false"/> 
</javaClientGenerator> 

	<table tableName="DEED" enableSelectByExample="true"
		enableDeleteByExample="false" enableCountByExample="true"
		enableUpdateByExample="false">
		<generatedKey column="id"
			sqlStatement="select to_char(sysdate,'YYMMDD')||sys_guid() from dual" />
	</table>
	<table tableName="ADVISERTASK" enableSelectByExample="true"
		enableDeleteByExample="false" enableCountByExample="true"
		enableUpdateByExample="false">
		<generatedKey column="id"
			sqlStatement="select to_char(sysdate,'YYMMDD')||sys_guid() from dual" />
	</table>
	<table tableName="RESEARCH" enableSelectByExample="true"
		enableDeleteByExample="false" enableCountByExample="true"
		enableUpdateByExample="false">
		<generatedKey column="id"
			sqlStatement="select to_char(sysdate,'YYMMDD')||sys_guid() from dual" />
	</table>	
	<table tableName="FIVEWORKS" enableSelectByExample="true"
		enableDeleteByExample="false" enableCountByExample="true"
		enableUpdateByExample="false">
		<generatedKey column="FIVEID"
			sqlStatement="select to_char(sysdate,'YYMMDD')||sys_guid() from dual" />
	</table>
</context>   -->

<!--
<classPathEntry location="D:\Document_x64\Downloads\mysql-connector-java-5.1.11.jar"/> 
        <context id="MysqlTables" targetRuntime="MyBatis3"> 
<commentGenerator>   
    <property name="suppressAllComments" value="true" />      
    </commentGenerator>  
<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://178.19.60.55:3306/dispatch" userId="user" password="pwd"> 
        </jdbcConnection> 
<javaTypeResolver> 
<property name="forceBigDecimals" value="false"/> 
</javaTypeResolver> 

<javaModelGenerator targetPackage="com.maosheng.demo.model" targetProject="src\main\java"> 
<property name="enableSubPackages" value="true"/> 
<property name="trimStrings" value="true"/> 
</javaModelGenerator>
 
<sqlMapGenerator targetPackage="com.maosheng.demo.dao" targetProject="src\main\resources"> 
<property name="enableSubPackages" value="true"/> 
</sqlMapGenerator> 

<javaClientGenerator type="XMLMAPPER" targetPackage="com.maosheng.demo.dao" targetProject="src\main\java"> 
<property name="enableSubPackages" value="true"/> 
</javaClientGenerator> 

<table schema="dispatch" tableName="TEST1" domainObjectName="Test1" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"> 
<property name="useActualColumnNames" value="true"/> 
</table> 
<table schema="dispatch" tableName="TEST2" domainObjectName="Test2" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"> 
<property name="useActualColumnNames" value="true"/> 
</table> 
</context> 
--> 
</context> 
</generatorConfiguration> 