<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyt.cxfq.mapper.UCommentMapper" >
  <resultMap id="BaseResultMap" type="com.zyt.cxfq.model.UComment" >
    <id column="commentId" property="commentid" jdbcType="VARCHAR" />
    <result column="authorId" property="authorid" jdbcType="VARCHAR" />
    <result column="criticId" property="criticid" jdbcType="VARCHAR" />
    <result column="circleId" property="circleid" jdbcType="VARCHAR" />
    <result column="commentTime" property="commenttime" jdbcType="TIMESTAMP" />
    <result column="parentcommentid" property="parentcommentid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zyt.cxfq.model.UComment" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    commentId, authorId, criticId, circleId, commentTime, parentcommentid
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zyt.cxfq.model.UCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from u_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zyt.cxfq.model.UCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.offset} , #{page.limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from u_comment
    where commentId = #{commentid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from u_comment
    where commentId = #{commentid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyt.cxfq.model.UCommentExample" >
    delete from u_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyt.cxfq.model.UComment" >
    <selectKey resultType="java.lang.String" keyProperty="commentid" order="BEFORE" >
      select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual
    </selectKey>
    insert into u_comment (commentId, authorId, criticId, 
      circleId, commentTime, parentcommentid, 
      message)
    values (#{commentid,jdbcType=VARCHAR}, #{authorid,jdbcType=VARCHAR}, #{criticid,jdbcType=VARCHAR}, 
      #{circleid,jdbcType=VARCHAR}, #{commenttime,jdbcType=TIMESTAMP}, #{parentcommentid,jdbcType=VARCHAR}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyt.cxfq.model.UComment" >
    <selectKey resultType="java.lang.String" keyProperty="commentid" order="BEFORE" >
      select concat(DATE_FORMAT(now(), '%y%m%d'),REPLACE(UUID(),'-','')) from dual
    </selectKey>
    insert into u_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      commentId,
      <if test="authorid != null" >
        authorId,
      </if>
      <if test="criticid != null" >
        criticId,
      </if>
      <if test="circleid != null" >
        circleId,
      </if>
      <if test="commenttime != null" >
        commentTime,
      </if>
      <if test="parentcommentid != null" >
        parentcommentid,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{commentid,jdbcType=VARCHAR},
      <if test="authorid != null" >
        #{authorid,jdbcType=VARCHAR},
      </if>
      <if test="criticid != null" >
        #{criticid,jdbcType=VARCHAR},
      </if>
      <if test="circleid != null" >
        #{circleid,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null" >
        #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentcommentid != null" >
        #{parentcommentid,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyt.cxfq.model.UCommentExample" resultType="java.lang.Integer" >
    select count(*) from u_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update u_comment
    <set >
      <if test="record.commentid != null" >
        commentId = #{record.commentid,jdbcType=VARCHAR},
      </if>
      <if test="record.authorid != null" >
        authorId = #{record.authorid,jdbcType=VARCHAR},
      </if>
      <if test="record.criticid != null" >
        criticId = #{record.criticid,jdbcType=VARCHAR},
      </if>
      <if test="record.circleid != null" >
        circleId = #{record.circleid,jdbcType=VARCHAR},
      </if>
      <if test="record.commenttime != null" >
        commentTime = #{record.commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentcommentid != null" >
        parentcommentid = #{record.parentcommentid,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update u_comment
    set commentId = #{record.commentid,jdbcType=VARCHAR},
      authorId = #{record.authorid,jdbcType=VARCHAR},
      criticId = #{record.criticid,jdbcType=VARCHAR},
      circleId = #{record.circleid,jdbcType=VARCHAR},
      commentTime = #{record.commenttime,jdbcType=TIMESTAMP},
      parentcommentid = #{record.parentcommentid,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update u_comment
    set commentId = #{record.commentid,jdbcType=VARCHAR},
      authorId = #{record.authorid,jdbcType=VARCHAR},
      criticId = #{record.criticid,jdbcType=VARCHAR},
      circleId = #{record.circleid,jdbcType=VARCHAR},
      commentTime = #{record.commenttime,jdbcType=TIMESTAMP},
      parentcommentid = #{record.parentcommentid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyt.cxfq.model.UComment" >
    update u_comment
    <set >
      <if test="authorid != null" >
        authorId = #{authorid,jdbcType=VARCHAR},
      </if>
      <if test="criticid != null" >
        criticId = #{criticid,jdbcType=VARCHAR},
      </if>
      <if test="circleid != null" >
        circleId = #{circleid,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null" >
        commentTime = #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentcommentid != null" >
        parentcommentid = #{parentcommentid,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zyt.cxfq.model.UComment" >
    update u_comment
    set authorId = #{authorid,jdbcType=VARCHAR},
      criticId = #{criticid,jdbcType=VARCHAR},
      circleId = #{circleid,jdbcType=VARCHAR},
      commentTime = #{commenttime,jdbcType=TIMESTAMP},
      parentcommentid = #{parentcommentid,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where commentId = #{commentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyt.cxfq.model.UComment" >
    update u_comment
    set authorId = #{authorid,jdbcType=VARCHAR},
      criticId = #{criticid,jdbcType=VARCHAR},
      circleId = #{circleid,jdbcType=VARCHAR},
      commentTime = #{commenttime,jdbcType=TIMESTAMP},
      parentcommentid = #{parentcommentid,jdbcType=VARCHAR}
    where commentId = #{commentid,jdbcType=VARCHAR}
  </update>
</mapper>